<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">
	
	<!-- DAO에서 @Autowired를 사용한다. -->
   	<context:annotation-config/>
   	
	<!-- Apache의 DBCP(DataBase Connection Pool) 객체를 생성 -->
	<context:property-placeholder location="classpath:mybatis/props/jdbc.properties"/>
	<bean id="ds" destroy-method="close" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driver}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.user}"/>
		<property name="password" value="${jdbc.pwd}"/>
		<property name="maxActive" value="${jdbc.maxActive}"/>
		<property name="maxIdle" value="${jdbc.maxIdle}"/>
		<property name="minIdle" value="${jdbc.minIdle}"/>
	</bean>
	
	<bean id="factory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 앞서 생성된 dataSource객체(ds)를 현재 객체(factory)에 넣어줘야한다. -->
		<property name="dataSource" ref="ds"/>
		
		<!-- 맵퍼들(인식)의 위치 지정 -->
		<property name="mapperLocations" value="classpath:mybatis/mapper/*.xml"/>
	</bean>
	
	<bean id="ss" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="factory"/>
	</bean>
	
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<!-- <property name="driverClassName"
				  value="oracle.jdbc.OracleDriver"></property>
		<property name="jdbcUrl"
				  value="jdbc:oracle:thin:@localhost:1521:xe"></property> -->
		<property name="driverClassName"
				  value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"></property>
		<property name="jdbcUrl"
				  value="jdbc:log4jdbc:oracle:thin:@localhost:1521:xe"></property>		  
		<property name="username" value="testdb"></property>
		<property name="password" value="testdb1234"></property>
	</bean>
	
	<!-- HikariCP configuration -->
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"
		  destroy-method="close">
		<constructor-arg ref="hikariConfig"/>
	</bean>
	
	<mybatis-spring:scan base-package="com.ict.mapper"/>
	<context:component-scan base-package="com.ict.service"></context:component-scan>
		
	<!-- DAO : userDao, categoryDao, boxOfficeDao, youTubeDao, reviewDao -->
	<bean id="userDao" class="mybatis.dao.UserDAO"/>
	<bean id="categoryDao" class="mybatis.dao.CategoryDAO"/>
	<bean id="boxOfficeDao" class="mybatis.dao.BoxOfficeDAO"/>
	<bean id="youTubeDao" class="mybatis.dao.YouTubeDAO"/>
	<bean id="reviewDao" class="mybatis.dao.ReviewDAO"/>
	
	<!-- 스케줄러 추가 : 현재 컨트롤러에서 할 예정이라 bean과 context:component-scan 없어도 될듯 -->
	<bean id="scheduleService" class="spring.util.Scheduler"/>
	<task:scheduler id="gsScheduler" pool-size="10" />
 	<task:executor id="gsTaskExecutor" pool-size="10" />
 	<task:annotation-driven executor="gsTaskExecutor" scheduler="gsScheduler" />
 	<context:component-scan base-package="spring.util.Scheduler"></context:component-scan>	

</beans>
